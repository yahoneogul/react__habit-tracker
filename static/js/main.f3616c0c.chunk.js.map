{"version":3,"sources":["components/habit.jsx","components/habits.jsx","components/navbar.jsx","components/habitAddFormFn.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","hadleIncrement","props","onIncrement","habit","hadleDecrement","onDecrement","hadleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","Habits","habits","map","id","Component","Navbar","totalCount","HabitAddFormFn","memo","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","onAdd","type","placeholder","ref","SimpleHabit","useState","setCount","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAkDeA,E,4MAvCbC,eAAiB,WACf,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAEpCC,eAAiB,WACf,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAEpCG,YAAc,WACZ,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAfjC,WAEEK,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,e,kCAEF,WAEEH,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,sB,oBAYF,WAAU,IAAD,EACiBD,KAAKT,MAAME,MAA3BQ,EADD,EACCA,KAAMC,EADP,EACOA,MACd,OACE,qBAAIC,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAC/B,wBACEC,UAAU,8BACVC,QAASJ,KAAKV,eAFhB,SAIE,mBAAGa,UAAU,yBAEf,wBACEA,UAAU,8BACVC,QAASJ,KAAKN,eAFhB,SAIE,mBAAGS,UAAU,0BAEf,wBACEA,UAAU,4BACVC,QAASJ,KAAKJ,YAFhB,SAIE,mBAAGO,UAAU,0B,GAzCHE,iBC6BLC,E,4MA3BbhB,eAAiB,SAACG,GAChB,EAAKF,MAAMC,YAAYC,I,EAEzBC,eAAiB,SAACD,GAChB,EAAKF,MAAMI,YAAYF,I,EAEzBG,YAAc,SAACH,GACb,EAAKF,MAAMM,SAASJ,I,4CAGtB,WAAU,IAAD,OACP,OACE,oBAAIU,UAAU,SAAd,SACGH,KAAKT,MAAMgB,OAAOC,KAAI,SAACf,GAAD,OACrB,cAAC,EAAD,CAEEA,MAAOA,EACPD,YAAa,EAAKF,eAClBK,YAAa,EAAKD,eAClBG,SAAU,EAAKD,aAJVH,EAAMgB,a,GAhBFC,aCWNC,E,4JAXb,WACE,OACE,sBAAKR,UAAU,SAAf,UACE,mBAAGA,UAAU,kCACb,mDACA,sBAAMA,UAAU,eAAhB,SAAgCH,KAAKT,MAAMqB,oB,GAN9BP,iBCqBNQ,EArBQC,gBAAK,SAACvB,GAC3B,IAAMwB,EAAWC,IAAMC,YAOvB,OACE,uBAAMd,UAAU,WAAWe,SAPZ,SAACC,GAChBA,EAAMC,iBACN,IAAMnB,EAAOc,EAASM,QAAQC,MAC9BrB,GAAQV,EAAMgC,MAAMtB,GACpBc,EAASM,QAAQC,MAAQ,IAGzB,UACE,uBACEnB,UAAU,YACVqB,KAAK,OACLC,YAAY,QACZC,IAAKX,IAEP,wBAAQZ,UAAU,aAAlB,uB,GCZYO,Y,aCkBHiB,EAtBK,SAACpC,GAAW,IAAD,EACHqC,mBAAS,GADN,mBACtB1B,EADsB,KACf2B,EADe,KAW7B,OANAC,qBAAU,WAIRhC,QAAQC,IAAR,gCAAqCG,MACpC,CAACJ,QAAQC,IAAI,8BAEd,qBAAII,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,qBACA,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAA8BC,QAb5B,WACtByB,EAAS3B,EAAQ,IAYf,SACE,mBAAGC,UAAU,6BCXrB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f3616c0c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n  componentDidMount() {\r\n    //Component가 UI 상에 등록되었을때, 사용자에게 보여질때 호출\r\n    console.log(`habit: ${this.props.habit.name} mounted`);\r\n  }\r\n  componentWillUnmount() {\r\n    //Component가 사라지기 전에 호출\r\n    console.log(`habit: ${this.props.habit.name} will unmounted`);\r\n  }\r\n  hadleIncrement = () => {\r\n    this.props.onIncrement(this.props.habit);\r\n  };\r\n  hadleDecrement = () => {\r\n    this.props.onDecrement(this.props.habit);\r\n  };\r\n  hadleDelete = () => {\r\n    this.props.onDelete(this.props.habit);\r\n  };\r\n\r\n  render() {\r\n    const { name, count } = this.props.habit;\r\n    return (\r\n      <li className=\"habit\">\r\n        <span className=\"habit-name\">{name}</span>\r\n        <span className=\"habit-count\">{count}</span>\r\n        <button\r\n          className=\"habit-button habit-increase\"\r\n          onClick={this.hadleIncrement}\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"habit-button habit-decrease\"\r\n          onClick={this.hadleDecrement}\r\n        >\r\n          <i className=\"fas fa-minus-square\"></i>\r\n        </button>\r\n        <button\r\n          className=\"habit-button habit-delete\"\r\n          onClick={this.hadleDelete}\r\n        >\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habit;\r\n","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\n\r\nclass Habits extends Component {\r\n  hadleIncrement = (habit) => {\r\n    this.props.onIncrement(habit);\r\n  };\r\n  hadleDecrement = (habit) => {\r\n    this.props.onDecrement(habit);\r\n  };\r\n  hadleDelete = (habit) => {\r\n    this.props.onDelete(habit);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ul className=\"habits\">\r\n        {this.props.habits.map((habit) => (\r\n          <Habit\r\n            key={habit.id}\r\n            habit={habit}\r\n            onIncrement={this.hadleIncrement}\r\n            onDecrement={this.hadleDecrement}\r\n            onDelete={this.hadleDelete}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habits;\r\n","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <i className=\"fas fa-grin-stars navbar-logo\"></i>\r\n        <strong>Habit Tracker</strong>\r\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { memo } from 'react';\r\n\r\nconst HabitAddFormFn = memo((props) => {\r\n  const inputRef = React.createRef();\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const name = inputRef.current.value;\r\n    name && props.onAdd(name);\r\n    inputRef.current.value = '';\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <input\r\n        className=\"add-input\"\r\n        type=\"text\"\r\n        placeholder=\"Habit\"\r\n        ref={inputRef}\r\n      />\r\n      <button className=\"add-button\">Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default HabitAddFormFn;\r\n","import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\nimport HabitAddFormFn from './components/habitAddFormFn';\n\nclass app extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  };\n  hadleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n  hadleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n  hadleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { name, count: 0, id: Date.now() }];\n    this.setState({ habits });\n  };\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n        <HabitAddFormFn onAdd={this.handleAdd} />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.hadleIncrement}\n          onDecrement={this.hadleDecrement}\n          onDelete={this.hadleDelete}\n        />\n        <button className=\"habits-reset\" onClick={this.handleReset}>\n          Reset All\n        </button>\n      </>\n    );\n  }\n}\n\nexport default app;\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst SimpleHabit = (props) => {\r\n  const [count, setCount] = useState(0);\r\n  const handleIncrement = () => {\r\n    setCount(count + 1);\r\n  };\r\n  useEffect(() => {\r\n    //첫번째 인자에만 값이 있는 경우 : Component가 mount 되었을 때, update 되었을 때 호출\r\n    //첫번째 인자와 두번째 인자에 값이 있는 경우 : 첫번째 인자 => Component가 Mount 되었을 때, 두번째 인자 => Component가 Update 되었을 때\r\n    //두번째 인자에 빈 배열이 있는 경우 : Component가 mount 되었을 때 만 호출\r\n    console.log(`mounted  & updated! : ${count}`);\r\n  }, [console.log('업데이트')]);\r\n  return (\r\n    <li className=\"habit\">\r\n      <span className=\"habit-name\">Reading</span>\r\n      <span className=\"habit-count\">{count}</span>\r\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SimpleHabit;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}